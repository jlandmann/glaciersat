name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.python-version }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -leo pipefail {0}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: | 
          pip install -U poetry
        shell: bash
      - run: poetry --version
      - name: Install deps
        run: |
             poetry update python=${{ matrix.python-version }}
             poetry install --with dev
      - name: Test
        run: |
          coverage erase
          coverage run --source=./glaciersat --parallel-mode --module pytest --verbose glaciersat
          coverage combine
          coverage xml
          coverage report --skip-covered
        env:
          MPLBACKEND: agg
          COVERAGE_RCFILE: ${{ github.workspace }}/.coveragerc
      - name: Upload Coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          COVERALLS_PARALLEL: true
        run: coveralls
  finish-coveralls:
    name: Coveralls Finished
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Coveralls Finished
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_SERVICE_NAME: github
      run: |
        pip3 install --upgrade coveralls==3.2.0 &&
        coveralls --finish  
